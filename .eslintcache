[{"/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/index.js":"1","/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/reportWebVitals.js":"2","/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/App.js":"3","/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/colors.js":"4"},{"size":500,"mtime":1611236867726,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1611236867728,"results":"7","hashOfConfig":"6"},{"size":2214,"mtime":1613044307957,"results":"8","hashOfConfig":"6"},{"size":220,"mtime":1613037259390,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"130pl0q",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/index.js",[],["20","21"],"/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/reportWebVitals.js",[],"/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/App.js",["22"],"import './App.scss';\nimport  { useState, useEffect } from 'react';\nimport COLORS from './colors'\nimport Button from 'react-bootstrap/Button'\nimport 'font-awesome/css/font-awesome.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport {faTwitter} from '@fortawesome/free-brands-svg-icons'\n\nlet qdb = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  let [quotesArray, setQuotesArray] =  useState('')\n  let [quote, setQuote] = useState('')\n  let [author, setAuthor] = useState('')\n  let [bColor, setBColor] = useState('#000')\n\n\n  const change = () => {\n    let data = quotesArray[Math.floor(Math.random() * quotesArray.length)];\n    setBColor(COLORS[Math.floor(Math.random() * COLORS.length)])\n    setAuthor(data.author)\n    setQuote(data.quote)\n  }\n\n  useEffect(  () => {\n    if( quotesArray ){\n      let data = quotesArray[Math.floor(Math.random() * quotesArray.length)];\n      setAuthor(data.author)\n      setQuote(data.quote)\n      setBColor(COLORS[Math.floor(Math.random() * COLORS.length)])\n    \n    }else{\n      fetch(qdb)\n      .then(r => r.json())\n      .then(data => {\n        setQuotesArray(data.quotes)\n      })\n    }\n  }, [quotesArray])\n\n  return (\n    <div className=\"App\" style = {{backgroundColor: bColor, color: bColor}}>\n      <header className=\"App-header\">\n        {quote \n          ? <div id='quote-box'>\n             <p id = 'text'>\n                \"{quote}\"\n              </p>\n              <p id = 'author'>\n                - {author}\n              </p>\n              <div style= {{display: 'flex' , justifyContent: 'space-between'}}>\n                <a id = 'tweet-quote' href ={encodeURI(`http://www.twitter.com/intent/tweet?text=\"${quote}\" \\n\\n- ${author}`)} target = '_blank'><FontAwesomeIcon color = {bColor} icon={faTwitter} size = '2x'/></a>\n                <Button variant = 'light' style = {{backgroundColor: bColor}} id = 'new-quote' onClick={() => change()}>New Quote</Button>\n              </div>\n          </div>\n          : <div>\n            <p>Loading...</p>\n          </div>\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mac/codingProjects/freecodecamp/front-end-libraries/quote-machine/src/colors.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":53,"column":17,"nodeType":"29","endLine":53,"endColumn":146},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]